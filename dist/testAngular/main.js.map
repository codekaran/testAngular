{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/server-call.service.ts","webpack:///./src/app/test-call/test-call.component.css","webpack:///./src/app/test-call/test-call.component.html","webpack:///./src/app/test-call/test-call.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<h1>hello</h1>\\n<app-test-call></app-test-call>\\n\"","import { Component } from \"@angular/core\";\n// import { ServerCallService } from \"./server-call.service\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  // constructor(private appService: ServerCallService) {}\n  // ngOnInit() {\n  //   this.appService.sendCall().subscribe(data => {\n  //     console.log(\"GGGGGGGGTOOOOOOOOOO\");\n  //     console.log(data);\n  //   });\n  // }\n  title = \"app\";\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { TestCallComponent } from \"./test-call/test-call.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [AppComponent, TestCallComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n// import \"rxjs/add/observable/combineLatest\";\n// import \"rxjs/add/operator/catch\";\n// import \"rxjs/add/operator/map\";\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ServerCallService {\n  constructor(private http: HttpClient) {}\n  sendCall(): Observable<any> {\n    console.log(\"sending the call\");\n    return this.http.get(\"http://139.59.77.99:7000/users\");\n  }\n  sendImage(data): Observable<any> {\n    console.log(\"sending image\");\n    return this.http.post(\"http://139.59.77.99:7000/users/image\", data);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  test-call works!\\n</h1>\\n\\nSelect a file: <input type=\\\"file\\\" #myImg name=\\\"myFile\\\" /><br /><br />\\n<button (click)=\\\"sendImage(myImg.value)\\\">sub</button>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ServerCallService } from \"../server-call.service\";\n@Component({\n  selector: \"app-test-call\",\n  templateUrl: \"./test-call.component.html\",\n  styleUrls: [\"./test-call.component.css\"]\n})\nexport class TestCallComponent implements OnInit {\n  constructor(private appService: ServerCallService) {}\n\n  ngOnInit() {\n    this.appService.sendCall().subscribe(data => {\n      console.log(\"GGGGGGGGTOOOOOOOOOO\");\n      console.log(data);\n    });\n  }\n  public sendImage(data: File) {\n    console.log(\"image daaattttaaaa\");\n    console.log(data);\n    this.appService.sendImage({ data }).subscribe(doc => {\n      console.log(doc);\n      console.log(\"got the image\");\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}